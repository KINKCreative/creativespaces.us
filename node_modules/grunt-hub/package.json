{
  "name": "grunt-hub",
  "description": "A Grunt task to watch and run tasks on multiple Grunt projects",
  "version": "0.6.2",
  "homepage": "https://github.com/shama/grunt-hub",
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shama/grunt-hub.git"
  },
  "bugs": {
    "url": "https://github.com/shama/grunt-hub/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shama/grunt-hub/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt nodeunit -v"
  },
  "dependencies": {
    "chalk": "~0.4.0",
    "async": "~0.2.10",
    "lodash": "~2.4.1"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.8.0",
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "watch"
  ],
  "readme": "# grunt-hub\n\nA Grunt task to watch and run tasks on multiple Grunt projects.\n\n## Create a Grunt Hub\n\nA Grunt Hub is just a folder with a [Gruntfile][getting_started] and this\ngrunt plugin installed. To create one do:\n\n```\nmkdir grunt-hub && cd grunt-hub\nnpm install grunt-hub\ncp -R node_modules/grunt-hub/tasks/init/hub/* .\n```\n\nThen edit the Gruntfile file to point to your other Grunt projects and run:\n`grunt hub`.\n\n### Integrate With an Existing Grunt Project\n\nInstall this grunt plugin next to your project's\n[Gruntfile][getting_started] with: `npm install grunt-hub`\n\nThen add this line to your project's Gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-hub');\n```\n\n## Watching Forever\n\nThe common use for grunt-hub is for a development server. Where you would\nlike to watch multiple projects and compile the SASS or concat/minify JS upon\nevery project as you edit.\n\nDepending on your system, there are various ways to ensure the grunt-hub stays\nalive. Such as with\n[upstart and monit](http://howtonode.org/deploying-node-upstart-monit).\n\nA simple way is to use `nohup` and create a `start.sh` script:\n\n```sh\n#!/bin/sh\nDIR=`dirname $0`\n/usr/bin/nohup /usr/local/bin/grunt --base $DIR hub --no-color &\necho \"Grunt Hub Started\"\n```\n\nand a `stop.sh` script:\n\n```sh\n#!/bin/sh\nps -ef | sed -n '/grunt/{/grep/!p;}' | awk '{print$2}' | xargs -I kill {}\necho \"Grunt Hub Stopped\"\n```\n\nPut these in your grunt-hub folder and run `./start.sh` to start and\n`./stop.sh` to stop.\n\n### Using [forever](https://npmjs.org/package/forever)\n\n`forever` is a another great way to watch multiple grunt projects forever.\n\n* Install `npm install forever grunt grunt-cli grunt-hub --save-dev`\n* Add a start script to your `package.json`:\n\n```json\n{\n  \"name\": \"my-grunt-hub\",\n  \"version\": \"0.1.0\",\n  \"scripts\": {\n    \"start\": \"forever ./node_modules/.bin/grunt hub\"\n  }\n}\n```\n\n* Now you can start your hub with `npm start`.\n\n## Configuring\n\nThis plugin includes a `hub` task and overrides the `watch` task.\n\n### `hub` task\n\nThe hub task is for running tasks on multiple projects. It would like to know\nwhich Gruntfiles to use and which tasks to run on each Grunt project. For example\nif I would like to `lint` and `test` on every Grunt project one folder up:\n\n```javascript\ngrunt.initConfig({\n  hub: {\n    all: {\n      src: ['../*/Gruntfile.js'],\n      tasks: ['jshint', 'nodeunit'],\n    },\n  },\n});\n```\n\nIf `tasks` were omitted, it will run the `default` tasks.\n\nYou can override tasks on the cli with args: `grunt hub:all:watch` will run the `watch` task on all projects instead of `jshint, nodeunit`.\n\n#### options\n\n##### `concurrent`\nDefault: `3`\n\nSet to the number of concurrent task runs to spawn.\n\n##### `allowSelf`\nDefault: `false`\n\nBy default, hub will skip its own Gruntfile. Set to `true` to allow hub to\ninclude itself.\n\n**Note:** Only set this for tasks which are not part of the `default`\ntask of their respective Gruntfile, or an infinite loop will occur.\n\n```\nhub: {\n  all: {\n    options: {\n      allowSelf: true\n    },\n    src: ['./Gruntfile.js', '../client1/Gruntfile.js', '../client2/Gruntfile.js'],\n  },\n},\n```\n\n## Where did the `watch` task go?\n\nIt isn't necessary. Just `npm install grunt-contrib-watch --save-dev` into your project folders. Then either add the `watch` task to your tasks list in your hub task config. Or run with `grunt hub:target:watch`.\n\n## Contributing\n\nPlease open an issue or send a pull request. Thanks!\n\n## Release History\n\n* 0.6.2 Fix syntax error. Thanks @eugeneiiim!\n* 0.6.1 Fix path.resolve must be strings for ownGruntfile. Thanks @terribleplan!\n* 0.6.0 Removed unneeded watch task. Fix issue with Gruntfiles not named Gruntfile. Removed deprecated grunt.util libs. Ability to override tasks via the cli.\n* 0.5.0 Run hub tasks in parallel. Add concurrent option to hub. Better error handling/printing. Thanks @plestik!\n* 0.4.0 Support for Grunt v0.4.\n* 0.3.6 Propagate exit codes. Thanks @wachunga!\n* 0.3.5 Update for latest grunt. Thanks @akinofftz!\n* 0.3.4 Allow watch task to be renamed.\n* 0.3.3 Fix issue with grunt-hub passing it's own tasks. Minor refactoring.\n* 0.3.2 Fix dep to `grunt-lib-contrib`. Include options in verbose output. Better spawn grunt in hub task.\n* 0.3.1 Update to gaze@0.2.0. Only spawn one at a time. Add `interrupt` option. Allow `tasks` to be undefined. Update to run on Grunt v0.4.\n* 0.3.0 Use [gaze](https://github.com/shama/gaze) for watching, Grunt v0.4 compatibility\n* 0.2.0 refactor: make easier to upgrade to Grunt v0.4, windows support, fix issue with mutliple watch targets\n* 0.1.1 add copyable template for a grunt hub\n* 0.1.0 initial release\n\n## License\n\nCopyright (c) 2013 Kyle Robinson Young  \nLicensed under the MIT license.\n\n\n[grunt]: https://github.com/gruntjs/grunt\n[getting_started]: http://gruntjs.com/getting-started\n",
  "readmeFilename": "README.md",
  "_id": "grunt-hub@0.6.2",
  "_shasum": "a5f7794727f0e9fa4473195847dfe1e1d918de74",
  "_from": "grunt-hub@",
  "_resolved": "https://registry.npmjs.org/grunt-hub/-/grunt-hub-0.6.2.tgz"
}
